variables:
  image_root: glotzerlab/ci:2020.05
  private_image_root: joaander/ci:2019.11

trigger: none

pr:
  - maint
  - master

schedules:
- cron: "0 2 * * *"
  displayName: Daily 10PM build
  # 2am UTC is 10PM eastern time
  branches:
    include:
    - "*"

stages:
- stage: build_test_cpu
  displayName: Unit test (CPU)
  dependsOn: []

  variables:
    enable_embree: 'on'
    enable_optix: 'off'
    test_gallery_images: False

  jobs:
  - job: linux_cpu
    displayName: Linux
    strategy:
      matrix:
        gcc10_py38:
          unused: ""
        gcc9_py38:
          unused: ""
        clang10_py38:
          unused: ""
        clang9_py38:
          unused: ""
        clang8_py38:
          unused: ""
        clang7_py38:
          unused: ""
        gcc8_py37:
          unused: ""
        gcc7_py37:
          unused: ""
        gcc6_py37:
          unused: ""
        gcc5_py37:
          unused: ""
        gcc48_py37:
          unused: ""
        clang6_py37:
          unused: ""
        clang5_py37:
          unused: ""
        clang4_py37:
          unused: ""
        gcc7_py36:
          unused: ""
    pool:
      vmImage: 'ubuntu-latest'

    container:
      image: $(image_root)-$(System.JobName)
      options: -u 0

    steps:
    - template: templates/build_test.yml

  - job: mac_cpu
    displayName: Mac

    strategy:
      matrix:
        mac10_14:
          mac_image: macOS-10.14

        mac10_15:
          mac_image: macOS-10.15
          test_gallery_images: True

    pool:
      vmImage: '$(mac_image)'

    steps:
    - script: brew install python tbb embree cmake ninja pybind11 qhull
      displayName: Brew install prereqs
    - script: python3 -m pip install pytest pillow numpy
      displayName: Pip install prereqs
    - template: templates/build_test.yml

- stage: build_test_gpu
  displayName: Unit test (GPU)
  dependsOn: []

  variables:
    enable_embree: 'off'
    enable_optix: 'on'

  jobs:
  - job: linux_gpu
    displayName: Linux
    strategy:
      matrix:

        optix60_cuda10_py37:
          unused: ""
        optix51_cuda9_py37:
          unused: ""
        optix51_cuda10_py37:
          unused: ""

    pool:
      name: 'GPU'
      demands:
        - short_jobs
        # optix6 jobs require a capable GPU
        - optix6

    container:
       image: $(private_image_root)-$(System.JobName)
       # bind mount needed to load OpTiX driver: https://github.com/NVIDIA/nvidia-docker/issues/990
       options: -u 0 --mount type=bind,source=/usr/lib/libnvidia-rtcore.so,target=/usr/lib/libnvidia-rtcore.so --mount type=bind,source=/usr/lib/libnvoptix.so,target=/usr/lib/libnvoptix.so --gpus=all --cpus=4 --memory=8g -e CUDA_VISIBLE_DEVICES

    workspace:
      clean: all

    steps:
    - template: templates/build_test.yml

- stage: doc
  displayName: Documentation
  dependsOn: []

  jobs:
  - job: sphinx_doc
    displayName: Sphinx
    pool:
      vmImage: 'ubuntu-latest'

    container:
      image: $(image_root)-clang10_py38
      options: -u 0

    workspace:
      clean: all

    steps:
    - checkout: self
      submodules: true
    - script: sphinx-build -b html -d build/doctrees -W -n . build/html
      displayName: (HTML)
      workingDirectory: doc
    - script: sphinx-build -b latex -d build/doctrees -W -n . build/latex
      displayName: (LaTeX)
      workingDirectory: doc

- stage: style
  displayName: Style checks
  dependsOn: []

  jobs:
  - job: clang_format
    displayName: clang-format
    pool:
      vmImage: 'ubuntu-latest'

    container:
      image: $(image_root)-clang10_py38
      options: -u 0

    workspace:
      clean: all

    steps:
    - checkout: self
      submodules: true
    - script: ./run-clang-format.py -r .
      displayName: Run clang-format

  - job: flake8
    pool:
      vmImage: 'ubuntu-latest'

    container:
      image: $(image_root)-clang10_py38
      options: -u 0

    workspace:
      clean: all

    steps:
    - checkout: self
      submodules: true

    - script: flake8
      displayName: Run flake8

  - job: yapf
    pool:
      vmImage: 'ubuntu-latest'

    container:
      image: $(image_root)-clang10_py38
      options: -u 0

    workspace:
      clean: all

    steps:
    - checkout: self
      submodules: true

    - script: yapf -d -r .
      displayName: Run yapf
